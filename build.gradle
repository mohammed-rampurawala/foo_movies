// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.google.gms:google-services:3.1.0'
        classpath 'io.fabric.tools:gradle:1.24.4'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    ext {
        // App dependencies
        libraryVersion = '27.0.2'
        glideVersion = '4.0.0'
        gsonVersion = '2.8.0'
        gsonConverterVersion = '2.3.0'

        dagger2Version = '2.8'
        rxjava2Version = '2.0.6'
        rxandroidVersion = '2.0.1'
        retrofitVersion = '2.3.0'
        interceptorVersion = '3.8.0'
        httpClientVersion = '3.9.1'
        butterknifeVersion = '8.8.1'
        searchViewVersion = '1.4.0'
        firebaseCoreVersion = '11.8.0'
        timberVersion = '4.5.1'

        //Test dependencies
        junitVersion = '4.12'
        espressoVersion = '3.0.0'
        mockitoVersion = '2.7.1'

        moviesDBApiKey = { ->
            def extraPropertiesFile = rootProject.file("extra.properties")
            def extrProps = new Properties()
            extrProps.load(new FileInputStream(extraPropertiesFile))

            if (extraPropertiesFile.exists()) {

                extrProps.load(new FileInputStream(extraPropertiesFile))

                if (extrProps != null && extrProps.containsKey('MOVIE_API_KEY')) {

                    println "Movie API Key Found $extrProps['MOVIE_API_KEY']"
                    return extrProps['MOVIE_API_KEY']
                } else {
                    println 'Movie API Key Not Found'
                    return ''
                }
            } else {
                println 'Movie API Key Not Found'
                return ''
            }
        }


        baseUrl = '"https://api.themoviedb.org/3/"'
    }
}

def getMovieKey(){
    def extraPropertiesFile = rootProject.file("extra.properties")
    def extrProps = new Properties()
    extrProps.load(new FileInputStream(extraPropertiesFile))

    if (extraPropertiesFile.exists()) {

        extrProps.load(new FileInputStream(extraPropertiesFile))

        if (extrProps != null && extrProps.containsKey('MOVIE_API_KEY')) {

            println 'Movie API Key Found'
            return extrProps['MOVIE_API_KEY']
        } else {
            println 'Movie API Key Not Found'
            return ''
        }
    } else {
        println 'Movie API Key Not Found'
       return ''
    }
}






allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.google.com/'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
